clone:
  depth: 2
  recursive: true
  submodule_override:
    external/anyode: git://github.com/bjodah/anyode.git
cache:
  mount:
    - /drone/sund-3.1.2-klu
    - /drone/sund-3.1.2-nolapack-noklu-extended
build:
  image: bjodah/bjodahimg18dev:v1.3
  environment:
    - OMP_NUM_THREADS=1
    - ANYODE_NUM_THREADS=2
    - CPLUS_INCLUDE_PATH=/usr/include/suitesparse
    - LIBRARY_PATH=/usr/lib/x86_64-linux-gnu
    - LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu
  commands:
    - if [ ! -d /drone/sund-3.1.2-klu ]; then .ci/get_sundials.sh 3.1.2 /drone/sund-3.1.2-klu -DLAPACK_ENABLE:BOOL=ON -DSUNDIALS_INDEX_TYPE:STRING="int32_t" -DKLU_ENABLE:BOOL=ON -DKLU_INCLUDE_DIR=/usr/include/suitesparse -DKLU_LIBRARY_DIR=/usr/lib/x86_64-linux-gnu; fi
    - if [ ! -d /drone/sund-3.1.2-nolapack-noklu-extended ]; then .ci/get_sundials.sh 3.12 /.drone/sund-3.1.2-nolapack-noklu-extended -DLAPACK_ENABLE:BOOL=OFF -DSUNDIALS_PRECISION:STRING="extended" -DKLU_ENABLE:BOOL=OFF; fi
    # Need to install pycvodes from source for extended precision/int64 test, since
    # that requires no LAPACK, whereas the pypi version installs with LAPACK
    - git clone --recurse-submodules https://github.com/bjodah/pycvodes.git /drone/pycvodes --branch v0.11.5
    - cd /drone/pycvodes
    - LIBRARY_PATH=/drone/sund-3.1.2-nolapack-noklu-int64-extended/lib:$LIBRARY_PATH CPLUS_INCLUDE_PATH=/drone/sund-3.1.2-nolapack-noklu-int64-extended/include:$CPLUS_INCLUDE_PATH LD_LIBRARY_PATH=/drone/sund-3.1.2-nolapack-noklu-int64-extended/lib:$LD_LIBRARY_PATH PYCVODES_LAPACK=0 PYCVODES_NO_KLU=1 python3 setup.py build
    - python3 -m pip install -e .
    - cd -
    - .ci/run_ci.sh pyodesys /drone/sund-3.1.2-nolapack-noklu-int64-extended
    - python3 -m pip uninstall pycvodes
    # "Normal" (double, int) tests
    - .ci/run_ci.sh pyodesys /drone/sund-3.1.2-klu
    - ./scripts/prepare_deploy.sh
    - rm -r ~/.cache/python*pyodesys*/
    - PATH=/opt/miniconda3/bin:$PATH conda config --add channels bjodah  # sym, pyodesys, pyneqsys
    - PATH=/opt/miniconda3/bin:$PATH conda upgrade conda-build
    - PATH=/opt/miniconda3/bin:$PATH conda-build conda-recipe
    - bash -c '[[ $(python3 setup.py --version) =~ ^[0-9]+.* ]]'
    - ./scripts/grep-for-merge-blocking-token.sh
    - ./scripts/grep-for-binary-data.sh

deploy:

  rsync:
    host: hera.physchem.kth.se
    port: 22
    user: pyodesys
    source: deploy/
    target: ~
    recursive: true
    delete: false
